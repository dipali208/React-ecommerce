{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\react-main\\\\src\\\\components\\\\Forms\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport { DataContext } from \"../DataProvider\";\nimport CryptoJS from \"crypto-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  let history = useHistory();\n  const [msg, setmsg] = useState(\" \");\n  const value = useContext(DataContext);\n  const [user, setuser] = value.user;\n  const validationSchema = Yup.object({\n    email: Yup.string().email(\"Invalid email address\").required(\"The email field is required.\"),\n    password: Yup.string().matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, \"Invalid password \").required(\"Password is required.\")\n  }); //styled Components\n\n  const FormContainer = styled.form`\n    border: 3px solid #f1f1f1;\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 16px;\n    margin: auto;\n    width: 50%;\n  `;\n  const Input = styled.input`\n    width: 100%;\n    padding: 12px 20px;\n    margin: 8px 0;\n    display: inline-block;\n   \n    box-sizing: border-box;\n  `;\n  const Button = styled.button`\n    background-color: #fdcb6e;\n    color: black;\n    padding: 14px 20px;\n    margin: 8px 0;\n    border: none;\n    cursor: pointer;\n    width: 100%;\n    &:hover {\n      background-color:rgb(171, 129, 51);\n    }\n  `;\n  const Error = styled.div`\n    color: red;\n    text-align: left;\n  `;\n  const H2 = styled.h2`\n    color: gray;\n  `;\n  const Label = styled.label`\n    &:after {\n      content: \" *\";\n      color: red;\n    }\n  `;\n  const H3 = styled.h3`\n    color: gray;\n    text-align: center;\n  `;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(H3, {\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      validationSchema: validationSchema,\n      onSubmit: values => {\n        var users = [];\n        users = JSON.parse(localStorage.getItem(\"signupDetails\") || \"[]\");\n        var user = users.find(val => val.email == values.email && JSON.parse(CryptoJS.AES.decrypt(val.password, \"secret key 123\").toString(CryptoJS.enc.Utf8)) == values.password //console.log(CryptoJS.AES.decrypt(val.password, 'secret key 123').toString(CryptoJS.enc.Utf8)),\n        );\n\n        if (user) {\n          // sessionStorage.setItem(\"user\", JSON.stringify(user));\n          setuser(user);\n          history.push(\"/\");\n        } else {\n          setmsg(\"Something went wrong try again\");\n        }\n      },\n      children: ({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        errors,\n        touched\n      }) => /*#__PURE__*/_jsxDEV(FormContainer, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(H2, {\n          children: \"Login Here \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"uname\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Enter Email\",\n            name: \"email\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), errors.email && touched.email ? /*#__PURE__*/_jsxDEV(Error, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(Label, {\n            for: \"psw\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            placeholder: \"Enter Password\",\n            name: \"password\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), errors.password && touched.password ? /*#__PURE__*/_jsxDEV(Error, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"fifBIUFr9DZDjmEZf/1qY+LErY0=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/React/react-main/src/components/Forms/Login.jsx"],"names":["React","useContext","useState","styled","Formik","Yup","useHistory","DataContext","CryptoJS","Login","history","msg","setmsg","value","user","setuser","validationSchema","object","email","string","required","password","matches","FormContainer","form","Input","input","Button","button","Error","div","H2","h2","Label","label","H3","h3","values","users","JSON","parse","localStorage","getItem","find","val","AES","decrypt","toString","enc","Utf8","push","handleSubmit","handleChange","handleBlur","errors","touched"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport { DataContext } from \"../DataProvider\";\nimport CryptoJS from \"crypto-js\";\n\nconst Login = () => {\n  let history = useHistory();\n  const [msg, setmsg] = useState(\" \");\n  const value = useContext(DataContext);\n  const [user, setuser] = value.user;\n\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .email(\"Invalid email address\")\n\n      .required(\"The email field is required.\"),\n    password: Yup.string()\n      .matches(\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n        \"Invalid password \"\n      )\n      .required(\"Password is required.\"),\n  });\n\n  //styled Components\n\n  const FormContainer = styled.form`\n    border: 3px solid #f1f1f1;\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 16px;\n    margin: auto;\n    width: 50%;\n  `;\n\n  const Input = styled.input`\n    width: 100%;\n    padding: 12px 20px;\n    margin: 8px 0;\n    display: inline-block;\n   \n    box-sizing: border-box;\n  `;\n  const Button = styled.button`\n    background-color: #fdcb6e;\n    color: black;\n    padding: 14px 20px;\n    margin: 8px 0;\n    border: none;\n    cursor: pointer;\n    width: 100%;\n    &:hover {\n      background-color:rgb(171, 129, 51);\n    }\n  `;\n  const Error = styled.div`\n    color: red;\n    text-align: left;\n  `;\n\n  const H2 = styled.h2`\n    color: gray;\n  `;\n  const Label = styled.label`\n    &:after {\n      content: \" *\";\n      color: red;\n    }\n  `;\n  const H3 = styled.h3`\n    color: gray;\n    text-align: center;\n  `;\n  return (\n    <>\n      <H3>{msg}</H3>\n      <Formik\n        initialValues={{\n          email: \"\",\n\n          password: \"\",\n        }}\n        validationSchema={validationSchema}\n        onSubmit={(values) => {\n          var users = [];\n          users = JSON.parse(localStorage.getItem(\"signupDetails\") || \"[]\");\n          var user = users.find(\n            (val) =>\n              val.email == values.email &&\n              JSON.parse(\n                CryptoJS.AES.decrypt(val.password, \"secret key 123\").toString(\n                  CryptoJS.enc.Utf8\n                )\n              ) == values.password\n            //console.log(CryptoJS.AES.decrypt(val.password, 'secret key 123').toString(CryptoJS.enc.Utf8)),\n          );\n\n          if (user) {\n            // sessionStorage.setItem(\"user\", JSON.stringify(user));\n            setuser(user);\n            history.push(\"/\");\n          } else {\n            setmsg(\"Something went wrong try again\");\n          }\n        }}\n      >\n        {({\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          values,\n          errors,\n          touched,\n        }) => (\n          <FormContainer onSubmit={handleSubmit}>\n            <H2>Login Here </H2>\n            <hr></hr>\n            <div>\n              <Label for=\"uname\">\n                <b>Username</b>\n              </Label>\n              <Input\n                type=\"text\"\n                placeholder=\"Enter Email\"\n                name=\"email\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n              />\n              {errors.email && touched.email ? (\n                <Error>\n                  <p>{errors.email}</p>\n                </Error>\n              ) : null}\n\n              <Label for=\"psw\">\n                <b>Password</b>\n              </Label>\n              <Input\n                type=\"password\"\n                placeholder=\"Enter Password\"\n                name=\"password\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n              />\n              {errors.password && touched.password ? (\n                <Error>\n                  <p>{errors.password}</p>\n                </Error>\n              ) : null}\n              <Button type=\"submit\">Login</Button>\n            </div>\n          </FormContainer>\n        )}\n      </Formik>\n    </>\n  );\n};\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}