{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\react-main\\\\src\\\\components\\\\ProtectedRoutes.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { DataContext } from \"./DataProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoutes = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const value = useContext(DataContext);\n  const [user, setuser] = value.user;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: () => user ? /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProtectedRoutes, \"ksutO2/Ix3UeCrGnhyM+QEP505Y=\");\n\n_c = ProtectedRoutes;\nexport default ProtectedRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"sources":["D:/React/react-main/src/components/ProtectedRoutes.js"],"names":["useContext","Redirect","Route","DataContext","ProtectedRoutes","component","Component","rest","value","user","setuser"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,gBAA5B;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AAC3D,QAAMC,KAAK,GAAGR,UAAU,CAACG,WAAD,CAAxB;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBF,KAAK,CAACC,IAA9B;AAEA,sBACA,QAAC,KAAD,OAAWF,IAAX;AAAiB,IAAA,MAAM,EAAE,MACvBE,IAAI,gBACA,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADA,gBAEA,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHN;AAAA;AAAA;AAAA;AAAA,UADA;AAOH,CAXD;;GAAML,e;;KAAAA,e;AAYJ,eAAeA,eAAf","sourcesContent":["import { useContext } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { DataContext } from \"./DataProvider\";\n\nconst ProtectedRoutes = ({ component: Component, ...rest }) => {\n    const value = useContext(DataContext);\n    const [user, setuser] = value.user;\n\n    return (\n    <Route {...rest} render={() => (\n      user\n        ? <Component/>\n        : <Redirect to='/login' />\n    )} />\n    )\n}\n  export default ProtectedRoutes;"]},"metadata":{},"sourceType":"module"}