{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\react-main\\\\src\\\\components\\\\DataProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/createContext();\nexport const DataProvider = props => {\n  _s();\n\n  const [order, setOrder] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [user, setuser] = useState(null);\n  useEffect(() => {\n    const dataCart = JSON.parse(localStorage.getItem(\"dataCart\"));\n    const user = JSON.parse(sessionStorage.getItem(\"user\"));\n    const dataorder = JSON.parse(localStorage.getItem(\"dataorder\")); //alert(dataorder);\n\n    if (user) setuser(user);\n    if (dataCart) setCart(dataCart);\n    if (dataorder) setOrder(dataorder);\n  }, []);\n  useEffect(() => {\n    //alert(\"cart\");\n    localStorage.setItem(\"dataCart\", JSON.stringify(cart));\n  }, [cart]);\n  useEffect(() => {\n    sessionStorage.setItem(\"user\", JSON.stringify(user));\n  }, [user]);\n  useEffect(() => {\n    // alert(\"order\");\n    localStorage.setItem(\"dataorder\", JSON.stringify(order));\n  }, [order]);\n  const actions = {\n    cart: [cart, setCart],\n    user: [user, setuser],\n    order: [order, setOrder]\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: actions,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DataProvider, \"4otzTyDksOXkzg4hZMz+hYdGUvs=\");\n\n_c = DataProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"sources":["D:/React/react-main/src/components/DataProvider.js"],"names":["React","createContext","useState","useEffect","DataContext","DataProvider","props","order","setOrder","cart","setCart","user","setuser","dataCart","JSON","parse","localStorage","getItem","sessionStorage","dataorder","setItem","stringify","actions","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,QAA9B,EAAwCC,SAAxC,QAAwD,OAAxD;;AACA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;AAEP,OAAO,MAAMI,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAjB;AACA,UAAMN,IAAI,GAAGG,IAAI,CAACC,KAAL,CAAWG,cAAc,CAACD,OAAf,CAAuB,MAAvB,CAAX,CAAb;AACA,UAAME,SAAS,GAAGL,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAlB,CAHc,CAId;;AACA,QAAIN,IAAJ,EAAUC,OAAO,CAACD,IAAD,CAAP;AACV,QAAIE,QAAJ,EAAcH,OAAO,CAACG,QAAD,CAAP;AACd,QAAIM,SAAJ,EAAeX,QAAQ,CAACW,SAAD,CAAR;AAChB,GARQ,EAQN,EARM,CAAT;AAUAhB,EAAAA,SAAS,CAAC,MAAM;AACd;AACAa,IAAAA,YAAY,CAACI,OAAb,CAAqB,UAArB,EAAiCN,IAAI,CAACO,SAAL,CAAeZ,IAAf,CAAjC;AACD,GAHQ,EAGN,CAACA,IAAD,CAHM,CAAT;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,cAAc,CAACE,OAAf,CAAuB,MAAvB,EAA+BN,IAAI,CAACO,SAAL,CAAeV,IAAf,CAA/B;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIAR,EAAAA,SAAS,CAAC,MAAM;AACd;AACAa,IAAAA,YAAY,CAACI,OAAb,CAAqB,WAArB,EAAkCN,IAAI,CAACO,SAAL,CAAed,KAAf,CAAlC;AACD,GAHQ,EAGN,CAACA,KAAD,CAHM,CAAT;AAKA,QAAMe,OAAO,GAAG;AACdb,IAAAA,IAAI,EAAE,CAACA,IAAD,EAAOC,OAAP,CADQ;AAEdC,IAAAA,IAAI,EAAE,CAACA,IAAD,EAAOC,OAAP,CAFQ;AAGdL,IAAAA,KAAK,EAAE,CAACA,KAAD,EAAQC,QAAR;AAHO,GAAhB;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEc,OAA7B;AAAA,cAAuChB,KAAK,CAACiB;AAA7C;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAtCM;;GAAMlB,Y;;KAAAA,Y","sourcesContent":["import React, {createContext, useState, useEffect} from 'react'\nexport const DataContext = createContext();\n\nexport const DataProvider = (props) => {\n  const [order, setOrder] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [user, setuser] = useState(null);\n\n  useEffect(() => {\n    const dataCart = JSON.parse(localStorage.getItem(\"dataCart\"));\n    const user = JSON.parse(sessionStorage.getItem(\"user\"));\n    const dataorder = JSON.parse(localStorage.getItem(\"dataorder\"));\n    //alert(dataorder);\n    if (user) setuser(user);\n    if (dataCart) setCart(dataCart);\n    if (dataorder) setOrder(dataorder);\n  }, []);\n\n  useEffect(() => {\n    //alert(\"cart\");\n    localStorage.setItem(\"dataCart\", JSON.stringify(cart));\n  }, [cart]);\n\n  useEffect(() => {\n    sessionStorage.setItem(\"user\", JSON.stringify(user));\n  }, [user]);\n\n  useEffect(() => {\n    // alert(\"order\");\n    localStorage.setItem(\"dataorder\", JSON.stringify(order));\n  }, [order]);\n\n  const actions = {\n    cart: [cart, setCart],\n    user: [user, setuser],\n    order: [order, setOrder],\n  };\n\n  return (\n    <DataContext.Provider value={actions}>{props.children}</DataContext.Provider>\n  );\n}"]},"metadata":{},"sourceType":"module"}