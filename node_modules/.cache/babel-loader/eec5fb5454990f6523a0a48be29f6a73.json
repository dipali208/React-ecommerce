{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\react-main\\\\src\\\\components\\\\Forms\\\\Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport { Formik } from \"formik\";\nimport { useContext, useState } from \"react\";\nimport * as Yup from \"yup\";\nimport styled from \"styled-components\";\nimport CryptoJS from \"crypto-js\";\nimport { DataContext } from \"../DataProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  const [showpass, setpass] = useState(true);\n  const value = useContext(DataContext);\n  const [user, setuser] = value.user;\n  var signuparray = JSON.parse(localStorage.getItem(\"signupDetails\") || \"[]\");\n  var descryptedPassword = JSON.parse(CryptoJS.AES.decrypt(user.password, \"secret key 123\").toString(CryptoJS.enc.Utf8));\n  const [msg, setmsg] = useState(\" \");\n  const validationSchema = Yup.object({\n    userName: Yup.string().max(15, ({\n      max\n    }) => `username must be at least ${max} characters`).required(\"The username field is required.\"),\n    address: Yup.string().max(250, ({\n      max\n    }) => `Address must be max ${max} characters`).required(\"The Adress field is required.\"),\n    password: Yup.string().matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\").required(\"Password is required\"),\n    conpassword: Yup.string().required(\"The password field is required.\").oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n  }); //styled Components\n\n  const FormContainer = styled.form`\n    border: 3px solid #f1f1f1;\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 16px;\n    margin: auto;\n    width: 50%;\n  `;\n  const Input = styled.input`\n    width: 100%;\n    padding: 12px 20px;\n    margin: 8px 0;\n    display: inline-block;\n    border: 1px solid #ccc;\n    box-sizing: border-box;\n  `;\n  const Button = styled.button`\n      background-color: #fdcb6e;\n    color: black;\n    padding: 14px 20px;\n    margin: 8px 0;\n    border: none;\n    cursor: pointer;\n    width: 100%;\n    &:hover {\n      background-color: rgb(171, 129, 51);\n    }\n  `;\n  const Error = styled.div`\n    color: red;\n    text-align: left;\n  `;\n  const H2 = styled.h2`\n    color: gray;\n  `;\n  const Label = styled.label`\n    &:after {\n      content: \" *\";\n      color: red;\n    }\n  `;\n  const H3 = styled.h3`\n    color: gray;\n    text-align: center;\n  `;\n\n  const togglePassword = () => {\n    setpass(!showpass);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(H3, {\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        userName: user.userName,\n        email: user.email,\n        address: user.address,\n        password: descryptedPassword,\n        conpassword: descryptedPassword\n      },\n      validationSchema: validationSchema,\n      onSubmit: values => {\n        sessionStorage.removeItem(\"user\");\n        let ciphertext = CryptoJS.AES.encrypt(JSON.stringify(values.password), 'secret key 123').toString();\n        console.log(ciphertext);\n        var encrypt = {\n          userName: values.userName,\n          email: values.email,\n          address: values.address,\n          password: ciphertext,\n          conpassword: ciphertext\n        };\n        setuser(encrypt);\n        var news = signuparray.map(item => {\n          var temp = Object.assign({}, item);\n\n          if (temp.email === values.email) {\n            temp.userName = encrypt.userName;\n            temp.email = encrypt.email;\n            temp.address = encrypt.address;\n            temp.password = encrypt.password;\n            temp.conpassword = encrypt.conpassword;\n          }\n\n          return temp;\n        });\n        localStorage.removeItem(\"signupDetails\");\n        localStorage.setItem(\"signupDetails\", JSON.stringify(news));\n        setmsg(\"Profile Updated Suceessfully\");\n      },\n      children: ({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        errors,\n        touched\n      }) => /*#__PURE__*/_jsxDEV(FormContainer, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(H2, {\n          children: \"Update Profile here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"uname\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Enter Username\",\n            name: \"userName\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), errors.userName && touched.userName ? /*#__PURE__*/_jsxDEV(Error, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errors.userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(Label, {\n            for: \"email\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Enter Email\",\n            name: \"email\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.email,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            for: \"address\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Enter Address\",\n            name: \"address\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), errors.address && touched.address ? /*#__PURE__*/_jsxDEV(Error, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errors.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(Label, {\n            for: \"psw\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: showpass ? \"password\" : \"text\",\n            placeholder: \"Enter Password\",\n            name: \"password\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: !showpass,\n            onClick: togglePassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 16\n          }, this), \"Show Password\", errors.password && touched.password ? /*#__PURE__*/_jsxDEV(Error, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            for: \"conpsw\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            placeholder: \"Re-enter Password\",\n            name: \"conpassword\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.conpassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), errors.conpassword && touched.conpassword ? /*#__PURE__*/_jsxDEV(Error, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errors.conpassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Profile, \"8OeGkSxLwbcQx+L4pbAdLOplVBo=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["D:/React/react-main/src/components/Forms/Profile.jsx"],"names":["Formik","useContext","useState","Yup","styled","CryptoJS","DataContext","Profile","showpass","setpass","value","user","setuser","signuparray","JSON","parse","localStorage","getItem","descryptedPassword","AES","decrypt","password","toString","enc","Utf8","msg","setmsg","validationSchema","object","userName","string","max","required","address","matches","conpassword","oneOf","ref","FormContainer","form","Input","input","Button","button","Error","div","H2","h2","Label","label","H3","h3","togglePassword","email","values","sessionStorage","removeItem","ciphertext","encrypt","stringify","console","log","news","map","item","temp","Object","assign","setItem","handleSubmit","handleChange","handleBlur","errors","touched"],"mappings":"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","sourcesContent":["import { Formik } from \"formik\";\nimport { useContext, useState } from \"react\";\nimport * as Yup from \"yup\";\nimport styled from \"styled-components\";\nimport CryptoJS from \"crypto-js\";\nimport { DataContext } from \"../DataProvider\";\n\nconst Profile = () => {\n  const [showpass,setpass]=useState(true);\n\n  const value = useContext(DataContext);\n  const [user, setuser] = value.user;\n  var signuparray = JSON.parse(localStorage.getItem(\"signupDetails\") || \"[]\");\n \n  var descryptedPassword = JSON.parse(\n    CryptoJS.AES.decrypt(user.password, \"secret key 123\").toString(\n      CryptoJS.enc.Utf8\n    )\n  );\n  const [msg, setmsg] = useState(\" \");\n\n  const validationSchema = Yup.object({\n    userName: Yup.string()\n      .max(15, ({ max }) => `username must be at least ${max} characters`)\n      .required(\"The username field is required.\"),\n\n    address: Yup.string()\n      .max(250, ({ max }) => `Address must be max ${max} characters`)\n      .required(\"The Adress field is required.\"),\n\n    password: Yup.string()\n      .matches(\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n        \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n      )\n      .required(\"Password is required\"),\n\n    conpassword: Yup.string()\n      .required(\"The password field is required.\")\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\"),\n  });\n\n  //styled Components\n  const FormContainer = styled.form`\n    border: 3px solid #f1f1f1;\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 16px;\n    margin: auto;\n    width: 50%;\n  `;\n\n  const Input = styled.input`\n    width: 100%;\n    padding: 12px 20px;\n    margin: 8px 0;\n    display: inline-block;\n    border: 1px solid #ccc;\n    box-sizing: border-box;\n  `;\n  const Button = styled.button`\n      background-color: #fdcb6e;\n    color: black;\n    padding: 14px 20px;\n    margin: 8px 0;\n    border: none;\n    cursor: pointer;\n    width: 100%;\n    &:hover {\n      background-color: rgb(171, 129, 51);\n    }\n  `;\n  const Error = styled.div`\n    color: red;\n    text-align: left;\n  `;\n\n  const H2 = styled.h2`\n    color: gray;\n  `;\n  const Label = styled.label`\n    &:after {\n      content: \" *\";\n      color: red;\n    }\n  `;\n  const H3 = styled.h3`\n    color: gray;\n    text-align: center;\n  `;\n  const togglePassword=()=>{    \n    setpass(!showpass);\n  }\n  return (\n    <>\n      <H3>{msg}</H3>\n      <Formik\n        initialValues={{\n          userName: user.userName,\n          email: user.email,\n          address: user.address,\n          password: descryptedPassword,\n          conpassword: descryptedPassword,\n        }}\n        validationSchema={validationSchema}\n\n\n        onSubmit={(values) => {\n          sessionStorage.removeItem(\"user\");\n          \n        let ciphertext = CryptoJS.AES.encrypt(JSON.stringify(values.password), 'secret key 123').toString();\n         console.log(ciphertext);\n          var encrypt={\n          userName: values.userName,\n          email: values.email,\n          address: values.address,\n          password: ciphertext,\n          conpassword: ciphertext\n          }\n          setuser(encrypt);\n       \n        \n\n                                                                   \n          var news = signuparray.map((item) => {\n            var temp = Object.assign({}, item);\n            if (temp.email === values.email) {\n              temp.userName = encrypt.userName;\n              temp.email = encrypt.email;\n              temp.address = encrypt.address;\n              temp.password = encrypt.password;\n              temp.conpassword = encrypt.conpassword;\n            }\n            return temp;\n          });\n\n          localStorage.removeItem(\"signupDetails\");\n          localStorage.setItem(\"signupDetails\", JSON.stringify(news));\n          setmsg(\"Profile Updated Suceessfully\");\n        }}\n      >\n        {({\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          values,\n          errors,\n          touched,\n        }) => (\n          <FormContainer onSubmit={handleSubmit}>\n            <H2>Update Profile here...</H2>\n            <hr></hr>\n            <div>\n              <Label for=\"uname\">\n                <b>Username</b>\n              </Label>\n              <Input\n                type=\"text\"\n                placeholder=\"Enter Username\"\n                name=\"userName\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.userName}\n              />\n              {errors.userName && touched.userName ? (\n                <Error>\n                  <p>{errors.userName}</p>\n                </Error>\n              ) : null}\n              <Label for=\"email\">\n                <b>Email</b>\n              </Label>\n              <Input\n                type=\"text\"\n                placeholder=\"Enter Email\"\n                name=\"email\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n                readOnly\n              />\n\n              <Label for=\"address\">\n                <b>Address</b>\n              </Label>\n              <Input\n                type=\"text\"\n                placeholder=\"Enter Address\"\n                name=\"address\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.address}\n              />\n              \n              {errors.address && touched.address ? (\n                <Error>\n                  <p>{errors.address}</p>\n                </Error>\n              ) : null}\n\n              <Label for=\"psw\">\n                <b>Password</b>\n              </Label>\n              <Input\n                type={showpass ? \"password\" : \"text\"}\n                placeholder=\"Enter Password\"\n                name=\"password\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n              />\n               <input type=\"checkbox\" checked={!showpass} onClick={togglePassword}/>Show Password\n              {errors.password && touched.password ? (\n                <Error>\n                  <p>{errors.password}</p>\n                </Error>\n              ) : null}\n                <br></br><br></br>\n              <Label for=\"conpsw\">\n                <b>Confirm Password</b>\n              </Label>\n              <Input\n                type=\"password\"\n                placeholder=\"Re-enter Password\"\n                name=\"conpassword\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.conpassword}\n              />\n              {errors.conpassword && touched.conpassword ? (\n                <Error>\n                  <p>{errors.conpassword}</p>\n                </Error>\n              ) : null}\n              <Button type=\"submit\">Update Profile</Button>\n            </div>\n          </FormContainer>\n        )}\n      </Formik>\n      \n    </>\n  );\n};\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}