{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\react-main\\\\src\\\\components\\\\Forms\\\\SignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport CryptoJS from \"crypto-js\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  let history = useHistory();\n  const [showpass, setpass] = useState(true);\n  const [emailmsg, setmsg] = useState(\" \");\n  var signuparray = [];\n  signuparray = JSON.parse(localStorage.getItem(\"signupDetails\") || \"[]\");\n  const emailAddress = [];\n\n  for (let i = 0; i < signuparray.length; i++) {\n    emailAddress[i] = signuparray[i].email;\n  }\n\n  const validationSchema = Yup.object({\n    userName: Yup.string().max(15, ({\n      max\n    }) => `username must be at least ${max} characters`).required(\"The username field is required.\"),\n    address: Yup.string().max(250, ({\n      max\n    }) => `Address must be max ${max} characters`).required(\"The Adress field is required.\"),\n    email: Yup.string().email(\"Invalid email address\").lowercase().required(\"The email field is required.\"),\n    password: Yup.string().matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\").required(\"The password field is required.\"),\n    conpassword: Yup.string().required(\"The Confirm password field is required.\").oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n  }); //styled Components\n\n  const FormContainer = styled.form`\n    border: 3px solid #f1f1f1;\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 16px;\n    margin: auto;\n    width: 50%;\n  `;\n  const Input = styled.input`\n    width: 100%;\n    padding: 12px 20px;\n    margin: 8px 0;\n    display: inline-block;\n    border: 1px solid #ccc;\n    box-sizing: border-box;\n  `;\n  const Button = styled.button`\n    background-color: #fdcb6e;\n    color: black;\n    padding: 14px 20px;\n    margin: 8px 0;\n    border: none;\n    cursor: pointer;\n    width: 100%;\n    &:hover {\n      background-color: rgb(171, 129, 51);\n    }\n  `;\n  const Error = styled.div`\n    color: red;\n    text-align: left;\n  `;\n  const H2 = styled.h2`\n    color: gray;\n  `;\n  const Label = styled.label`\n    &:after {\n      content: \" *\";\n      color: red;\n    }\n  `;\n  const H3 = styled.h3`\n    color: gray;\n    text-align: center;\n  `;\n\n  const togglePassword = () => {\n    setpass(!showpass);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        userName: \"\",\n        email: \"\",\n        address: \"\",\n        password: \"\",\n        conpassword: \"\"\n      },\n      validationSchema: validationSchema,\n      onSubmit: values => {\n        const check = emailAddress.every(val => {\n          return val !== values.email;\n        });\n\n        if (check) {\n          let ciphertext = CryptoJS.AES.encrypt(JSON.stringify(values.password), \"secret key 123\").toString();\n          console.log(ciphertext);\n          var encrypt = {\n            userName: values.userName,\n            email: values.email,\n            address: values.address,\n            password: ciphertext,\n            conpassword: ciphertext\n          };\n          signuparray.push(encrypt);\n          localStorage.setItem(\"signupDetails\", JSON.stringify(signuparray));\n          history.push(\"/login\");\n        } else {\n          setmsg(\"Emailid Already Exist\");\n        }\n      },\n      children: ({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        errors,\n        touched\n      }) => /*#__PURE__*/_jsxDEV(FormContainer, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(H2, {\n          children: \"Sign Up To create Account..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"uname\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Enter Username\",\n            name: \"userName\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), errors.userName && touched.userName ? /*#__PURE__*/_jsxDEV(Error, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errors.userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(Label, {\n            for: \"email\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Enter Email\",\n            name: \"email\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), errors.email && touched.email ? /*#__PURE__*/_jsxDEV(Error, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(Error, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: emailmsg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            for: \"address\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            placeholder: \"Enter Address\",\n            name: \"address\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), values.address.length > 0 && 250 - values.address.length > 0 ? /*#__PURE__*/_jsxDEV(Error, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [250 - values.address.length, \" character left\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this) : null, errors.address && touched.address ? /*#__PURE__*/_jsxDEV(Error, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errors.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(Label, {\n            for: \"psw\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: showpass ? \"password\" : \"text\",\n            placeholder: \"Enter Password\",\n            name: \"password\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: !showpass,\n            onClick: togglePassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), \"Show Password\", errors.password && touched.password ? /*#__PURE__*/_jsxDEV(Error, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            for: \"conpsw\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            placeholder: \"Re-enter Password\",\n            name: \"conpassword\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.conpassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), errors.conpassword && touched.conpassword ? /*#__PURE__*/_jsxDEV(Error, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errors.conpassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"SignUp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(SignUp, \"Cld9lPb441o5MajjVsEGKnCf6L0=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/React/react-main/src/components/Forms/SignUp.jsx"],"names":["Formik","Yup","useHistory","styled","CryptoJS","useState","SignUp","history","showpass","setpass","emailmsg","setmsg","signuparray","JSON","parse","localStorage","getItem","emailAddress","i","length","email","validationSchema","object","userName","string","max","required","address","lowercase","password","matches","conpassword","oneOf","ref","FormContainer","form","Input","input","Button","button","Error","div","H2","h2","Label","label","H3","h3","togglePassword","values","check","every","val","ciphertext","AES","encrypt","stringify","toString","console","log","push","setItem","handleSubmit","handleChange","handleBlur","errors","touched"],"mappings":"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","sourcesContent":["import { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport CryptoJS from \"crypto-js\";\nimport { useState } from \"react\";\n\nconst SignUp = () => {\n  let history = useHistory();\n  const [showpass, setpass] = useState(true);\n  const [emailmsg, setmsg] = useState(\" \");\n  var signuparray = [];\n\n  signuparray = JSON.parse(localStorage.getItem(\"signupDetails\") || \"[]\");\n  const emailAddress = [];\n\n  for (let i = 0; i < signuparray.length; i++) {\n    emailAddress[i] = signuparray[i].email;\n  }\n\n  const validationSchema = Yup.object({\n    userName: Yup.string()\n      .max(15, ({ max }) => `username must be at least ${max} characters`)\n      .required(\"The username field is required.\"),\n\n    address: Yup.string()\n      .max(250, ({ max }) => `Address must be max ${max} characters`)\n      .required(\"The Adress field is required.\"),\n\n    email: Yup.string()\n      .email(\"Invalid email address\")\n      .lowercase()\n      .required(\"The email field is required.\"),\n    password: Yup.string()\n      .matches(\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n        \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n      )\n      .required(\"The password field is required.\"),\n\n    conpassword: Yup.string()\n      .required(\"The Confirm password field is required.\")\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\"),\n  });\n\n  //styled Components\n  const FormContainer = styled.form`\n    border: 3px solid #f1f1f1;\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 16px;\n    margin: auto;\n    width: 50%;\n  `;\n\n  const Input = styled.input`\n    width: 100%;\n    padding: 12px 20px;\n    margin: 8px 0;\n    display: inline-block;\n    border: 1px solid #ccc;\n    box-sizing: border-box;\n  `;\n\n  const Button = styled.button`\n    background-color: #fdcb6e;\n    color: black;\n    padding: 14px 20px;\n    margin: 8px 0;\n    border: none;\n    cursor: pointer;\n    width: 100%;\n    &:hover {\n      background-color: rgb(171, 129, 51);\n    }\n  `;\n  const Error = styled.div`\n    color: red;\n    text-align: left;\n  `;\n\n  const H2 = styled.h2`\n    color: gray;\n  `;\n  const Label = styled.label`\n    &:after {\n      content: \" *\";\n      color: red;\n    }\n  `;\n  const H3 = styled.h3`\n    color: gray;\n    text-align: center;\n  `;\n  const togglePassword = () => {\n    setpass(!showpass);\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          userName: \"\",\n          email: \"\",\n          address: \"\",\n          password: \"\",\n          conpassword: \"\",\n        }}\n        validationSchema={validationSchema}\n        onSubmit={(values) => {\n          const check = emailAddress.every((val) => {\n            return val !== values.email;\n          });\n         \n          if (check) {\n            let ciphertext = CryptoJS.AES.encrypt(\n            JSON.stringify(values.password),\n            \"secret key 123\"\n          ).toString();\n          console.log(ciphertext);\n          var encrypt = {\n            userName: values.userName,\n            email: values.email,\n            address: values.address,\n            password: ciphertext,\n            conpassword: ciphertext,\n          };\n          signuparray.push(encrypt);\n\n          localStorage.setItem(\"signupDetails\", JSON.stringify(signuparray));\n          history.push(\"/login\");\n          }\n          else{\n            setmsg(\"Emailid Already Exist\");\n\n          }\n\n         \n        }}\n      >\n        {({\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          values,\n          errors,\n          touched,\n        }) => (\n          <FormContainer onSubmit={handleSubmit}>\n            <H2>Sign Up To create Account..</H2>\n            <hr></hr>\n            <div>\n              <Label for=\"uname\">\n                <b>Username</b>\n              </Label>\n              <Input\n                type=\"text\"\n                placeholder=\"Enter Username\"\n                name=\"userName\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.userName}\n              />\n              {errors.userName && touched.userName ? (\n                <Error>\n                  <p>{errors.userName}</p>\n                </Error>\n              ) : null}\n              <Label for=\"email\">\n                <b>Email</b>\n              </Label>\n              <Input\n                type=\"text\"\n                placeholder=\"Enter Email\"\n                name=\"email\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n              />\n              {errors.email && touched.email ? (\n                <Error>\n                  <p>{errors.email}</p>\n                </Error>\n              ) : null}\n              <Error>\n                  <p>{emailmsg}</p>\n                </Error>\n              <Label for=\"address\">\n                <b>Address</b>\n              </Label>\n              <Input\n                type=\"text\"\n                placeholder=\"Enter Address\"\n                name=\"address\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.address}\n              />\n              {(values.address.length>0)&&(250 - values.address.length) >0 ? (\n                <Error>\n                  <p>{250 - values.address.length} character left</p>\n                </Error>\n              ) : null}\n              {errors.address && touched.address ? (\n                <Error>\n                  <p>{errors.address}</p>\n                </Error>\n              ) : null}\n              <Label for=\"psw\">\n                <b>Password</b>\n              </Label>\n              <Input\n                type={showpass ? \"password\" : \"text\"}\n                placeholder=\"Enter Password\"\n                name=\"password\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n              />\n              <input\n                type=\"checkbox\"\n                checked={!showpass}\n                onClick={togglePassword}\n              />\n              Show Password\n              {errors.password && touched.password ? (\n                <Error>\n                  <p>{errors.password}</p>\n                </Error>\n              ) : null}\n              <br></br> <br></br>\n              <Label for=\"conpsw\">\n                <b>Confirm Password</b>\n              </Label>\n              <Input\n                type=\"password\"\n                placeholder=\"Re-enter Password\"\n                name=\"conpassword\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.conpassword}\n              />\n              {errors.conpassword && touched.conpassword ? (\n                <Error>\n                  <p>{errors.conpassword}</p>\n                </Error>\n              ) : null}\n              <Button type=\"submit\">SignUp</Button>\n            </div>\n          </FormContainer>\n        )}\n      </Formik>\n    </>\n  );\n};\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}